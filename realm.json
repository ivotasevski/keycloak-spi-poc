[
  {
    "id": "28679fe1-cc68-4d34-8f0d-49b25cac8af3",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "37065d7b-a8cd-481b-bd10-c9bd5b2c36c1",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "external-roles-spi-test-realm": [
                "manage-identity-providers",
                "query-groups",
                "view-events",
                "view-clients",
                "view-realm",
                "view-users",
                "manage-authorization",
                "view-identity-providers",
                "query-realms",
                "query-clients",
                "impersonation",
                "view-authorization",
                "create-client",
                "manage-clients",
                "manage-users",
                "query-users",
                "manage-realm",
                "manage-events"
              ],
              "master-realm": [
                "view-realm",
                "impersonation",
                "manage-clients",
                "query-realms",
                "manage-users",
                "view-users",
                "manage-identity-providers",
                "view-authorization",
                "view-identity-providers",
                "manage-events",
                "manage-authorization",
                "view-clients",
                "manage-realm",
                "query-users",
                "query-groups",
                "create-client",
                "view-events",
                "query-clients"
              ]
            }
          },
          "clientRole": false,
          "containerId": "28679fe1-cc68-4d34-8f0d-49b25cac8af3",
          "attributes": {}
        },
        {
          "id": "f90057a8-0f04-4b79-be9c-59b5f35314f1",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "28679fe1-cc68-4d34-8f0d-49b25cac8af3",
          "attributes": {}
        },
        {
          "id": "b3f72a16-a175-41a2-83d5-b3fb0991ed29",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "28679fe1-cc68-4d34-8f0d-49b25cac8af3",
          "attributes": {}
        },
        {
          "id": "0d7e8467-8c01-4aad-b9e5-133b60cac19d",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "28679fe1-cc68-4d34-8f0d-49b25cac8af3",
          "attributes": {}
        },
        {
          "id": "d48a3312-649c-4a68-a8a6-96bfdb7dbf60",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "28679fe1-cc68-4d34-8f0d-49b25cac8af3",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "external-roles-spi-test-realm": [
          {
            "id": "149b7729-f30b-4e1f-a133-76cfdef785d4",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "cd9bd280-73ae-4994-bba2-3cd3868c7045",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "38d43f59-7e24-4c43-a35e-bd0d167c969d",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "afc99adf-3960-46a1-9370-416c7aec583e",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "4003349f-37eb-4df2-b1bf-d71ea368d0f1",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "0126a5c9-31e4-4dfa-88fd-0288097b6519",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "99b42105-41db-4f12-9d4e-9cf4dac280ff",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "56638049-9f10-46b2-9093-2aa667b23959",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "3afaed0a-22ca-470b-8d1f-ebdc1aecc0e1",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "93dfc660-b050-414e-8387-902adc9f7e2a",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "external-roles-spi-test-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "b1b73a02-3e08-4d7a-92de-9a5c87555496",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "0838a589-c5ba-4c3f-9015-62b480199aed",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "external-roles-spi-test-realm": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "fdd2828a-8af7-4720-950a-c928e090d1c8",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "dd558c7b-69e5-41e1-aba1-f9e05268b1b2",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "e2c86c10-52f0-4e39-b6db-64f3fe2a2283",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "a79ff7ec-e88a-49f8-9d9f-09413249ed97",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "9eace04c-8345-4b35-903b-60cec68cd1ae",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          },
          {
            "id": "fb61706f-70c7-4641-b9b8-4334909c41af",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "817149a6-743e-4a00-83b5-6bc02ab22929",
            "attributes": {}
          }
        ],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "1edc884d-441e-42ae-b6ab-85e113bedb23",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "54da7a23-0fff-4a81-85dd-3369e95e7792",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "09ef0520-a32d-41e1-a5f7-0c5d4f667acb",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "9f0af112-4563-4fba-b664-e5d009ccc9be",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "dcd5e7c5-94e5-4543-91f8-96b56ef44bb4",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "a3f10256-0039-4e8e-9368-22420767878b",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "99ccc81f-cf18-449e-be5c-460dc0a170c8",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "d026de0e-a13a-492c-b5a3-49d32bbae3bc",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "8afc5e94-c6bb-48c0-9862-0fbcdce5d843",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "8a61e009-3495-4699-a560-c1caed070a00",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "791f77a8-7911-4168-a573-d752b405b903",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "2148867a-ee6c-4d86-bd9a-3cf2ca7e6c2d",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "4ae5eab0-0cb5-4665-aa58-21f784e3fcbc",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "e3d98347-4873-4793-a33a-ae5a46cebfee",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "705e18c1-ec10-496d-b34a-3f84681efa60",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "07641d31-c1d0-49c4-80de-b0a31fe0c969",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "9b13264e-7c71-4729-8ee1-03a82fff930b",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "7e3c0a4c-8a8f-4301-b139-4e52a75eb906",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "282067b8-f71c-4f11-8137-78f7acab72f4",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          },
          {
            "id": "7e60df76-83fa-4b24-b8ab-68bb8837ff9e",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "3e37daa0-8e8c-4384-b899-5062190c7a56",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "5a61f83b-a64b-40a1-b3ed-b4f6b417c087",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "895d3bcb-950c-46c9-a035-515fd63f9588",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "9ccff072-1305-4b9b-9f17-76bed4e38e70",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "6b969324-801d-4cf0-a46f-fdb265f31f15",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "b94394bc-6748-462e-a738-499102e3814d",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "ab79f9cd-d560-4c65-9013-8a867756539b",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          },
          {
            "id": "17fb3eca-5968-493b-bfd2-9687f057a7cd",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "f90057a8-0f04-4b79-be9c-59b5f35314f1",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "28679fe1-cc68-4d34-8f0d-49b25cac8af3"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "f7d4a150-87b3-4813-a521-f689a464657b",
        "username": "admin",
        "emailVerified": false,
        "createdTimestamp": 1709730284742,
        "enabled": true,
        "totp": false,
        "credentials": [
          {
            "id": "f1517b80-89ae-4b86-82cd-b2d73c507e5c",
            "type": "password",
            "createdDate": 1709730285149,
            "secretData": "{\"value\":\"vgO+tiX9PfXwKUuZAm1Oh4DxUjn06pV5eBBGDzjETDpKpLPOqoMMG7x+5cNeq4r/ZH9TquYUw7Adx3LivzB9fQ==\",\"salt\":\"r+NzA7WlhkXCJUas4yCqQg==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "admin",
          "default-roles-master"
        ],
        "clientRoles": {
          "external-roles-spi-test-realm": [
            "query-realms",
            "manage-identity-providers",
            "query-groups",
            "query-clients",
            "view-authorization",
            "create-client",
            "view-events",
            "manage-clients",
            "view-clients",
            "view-realm",
            "view-users",
            "manage-users",
            "manage-authorization",
            "query-users",
            "manage-realm",
            "manage-events",
            "view-identity-providers"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "77871f5d-f0dd-42db-8d64-e7aa9364ae1f",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ceac93e9-1369-4b24-8b10-3f5fa353ead8",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "44f27468-9770-479a-9c10-27ca927babfb",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f064d439-c7ed-45d9-8d0d-b9ca4422f2f4",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "54da7a23-0fff-4a81-85dd-3369e95e7792",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "817149a6-743e-4a00-83b5-6bc02ab22929",
        "clientId": "external-roles-spi-test-realm",
        "name": "external-roles-spi-test Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      },
      {
        "id": "1f9a2c3e-ea5f-4bf2-b0ff-990af4071531",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "bfd3ad4b-8093-45d2-a436-f925ead635a3",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "b3a6e3fe-82cf-475d-809d-b27d3a246295",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "b0e5941f-67ed-439f-a665-5eda48937618",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "86ebf8eb-5ac5-418a-805b-f4b08a802476",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "1992a824-d9b5-49e6-8d95-586d3d01b430",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "f301cb08-a8ef-402e-a585-0473db7f62af",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "25ba1104-e8d2-40ca-9538-e70f8fabc548",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "80ddee58-580c-47d2-947a-00cd53c661a3",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "13ca4858-e940-4cd6-860c-db180e89cca0",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "55f2d77b-a076-403a-bb23-47eec11ab7ca",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "b4f99eeb-7ba9-4e7d-a6ab-168320054b36",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "096478c6-7dde-47a9-8655-abebb01e354c",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2292cdb4-8b97-4349-88ab-9eac6ad48681",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "36dc861d-3ad2-4181-87c3-93c0f1324944",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "5e123162-7aa2-4b50-9f41-3977b3074f78",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c7c6adbd-a307-48dc-93ee-78f3a54a77b7",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a4c617aa-f5ec-4b35-9344-fc2ae9dfcc9d",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6e66d93c-ad03-494b-8c34-fc76fedc48c0",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6e9499dd-ba01-4b25-9a6e-24401bcd8baa",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "b98970cc-0372-4fb5-86a4-8f58c67a82ba",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e62c577e-bdfe-438a-bec9-190d2d927476",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "acd4fb19-3080-4c4c-8b49-f6d71d98bf78",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "73a534ee-479d-44fa-8c27-28ec984d1850",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "1bc6c91c-a815-4417-a26b-30800678c76e",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9dcafac8-f0db-4aa8-8e19-63c33774dad0",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "2ae8ebfa-e6d6-4ab4-a6a9-f4433e631fde",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c23ef044-6a99-4a2a-a689-db435afdce64",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "a2e0ea6a-0180-4aa3-9a19-c3736f72b99f",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "94556a35-8632-43d7-b913-8af6ec4c40f5",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "b6bdd90b-42df-48d3-a1de-dfd96331bbd9",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "e008b680-a5eb-40b9-9cf4-883a9bb5973a",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "b2c0108b-74a0-49c5-97b9-594508a3c7d2",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "4c7c32ed-7ee9-44fc-9f42-fde7094537d9",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "f6ba7a41-c587-48d8-9c34-b9bb6b8e3c14",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "dbb407c7-f2ac-4876-a15d-5f2f2e5c4019",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "357fa9ab-2b60-4329-bf40-2866b83b4075",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "7f1f568e-cfb3-40e2-b124-7bc4be7a718c",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "edeff94d-13d3-4863-a59e-96b671b8908b",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "dfe4a768-a48a-4fff-8f31-788622e27766",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "xXSSProtection": "1; mode=block",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "9ea85d96-f9a3-48a2-830e-bfee359e71ce",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "36ece568-d61f-42d2-b2cb-be0a51e74329",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "2a3f0bb5-4b6c-45b0-b48b-8601e8e1c936",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "32c977e1-51e6-4304-bc74-1d7e9701b831",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "995ea978-5fb5-4d62-b7c2-69f9c741d30b",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "d62b0911-c879-4930-8726-f1ae15466d8b",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "e73ab87f-feae-44e5-8670-20353b6aeaf2",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "01325caa-d88f-4e84-915c-81a380839e04",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "d6ee9014-f1a1-4045-bf74-4a408eaca9c4",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {
            "kc.user.profile.config": [
              "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "44176b57-6a77-4705-9987-15b64f619211",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAtg9Jt8b8IR7gSX7l5QvgiHmlWTHzknILVkDuqbwXBZ0m4UL/r0UJbtqrX1pD8f7fYPPzzM62Ft7PBtKEtpOiUldnT/QjM6YKNNqiw4PABUqNVANItsODOysPont2XJMjDM0zzZkaovrV+1Tknzkp4XHCaNtN3dC1JPa4BGcGRIJRzBKrhe3LSNK6DKN0Dw8I3VX2L3L1XfCiUKrsQ2yw45TTGsBR88aLBSsXndi13q/iTe6+TYLyChYzN5gABn3aD09csTEn0Nu3WIlkYWwmL8YmFQRp2Sw9C22592ujMIzEs7Hkz/iicAi0Fv5PrOJeFds7QEha2He2j1hVwun7uwIDAQABAoIBAAmRu4sa1oH6wi9qwzR36T95ivmphZPZeOoTZws2rsxMCp3SRgEu5kRUeKexS85dwKnM0mNqxakyR3xxNt0n3MmdYxNE3rX/9xv4r/YJ20Wlhp2Q8wX6npyCDDc7BdyIz7gd1kHrJCDHGwjNjGf04VQo60VUQ/8x0XIJCJQTdc6TWkoLgKLO1p0cx34AFoJhU6WkB1+NcBE6sRXSFGH6HzNqhuZHNCFds7By9B5UssTzEgoGnOdFNMDEsdmd9XQ7dgTqKLV130I5tpntXzaYE3dZQd/V5DrKC0GAcBnFb7v98tPNuhlkFd+r9APDYclBJqpVCPyPCh0OSay2ExY6qU0CgYEA2kuu8AgT0YaLr1T/gNN+p5uzs3kXrBjQP4UY+iKBxdEKZfngGBVsNSylhEeJUtShHiQB2K1UhB1eAvqgPHsiC9PDGvU873XfcjcugFqfuS63TduirSNG5ozUPnwChxplgwh4xFlC4QBWaEvw5OHl7HnGnGONkG3qsFvx1UojnG0CgYEA1YFfBajFf+mMExv4ToTJMXr4o2Z1HgrQHW8lAvjYdaQl6UohCY6q734W70iLmyFYfz/03nhgXmTyMu9bnGjf10V4iAHIobrRwjmmunD2FV4bz62fpz3j/y72OtkMHclJ2YRb1SoRZCRQjiZQY1YRVxwGV8VeryZOL9c4pfq1D8cCgYEAmRZKcHq5q0631xW8uROY1uISe+KH/2DHakRk58YbTCb1K964kSs033WX/dRNMZF8DC8kPFgR1TTjISOyC7gugCzZvqYNPcFkGi0op0rmiG+CjU9iHhmHN1e74LYG78hLOEFQsCIJDNG3xxy6q0jgfZ5I8pO+S3NKCrPwPKvpnWECgYAqAlWPCIErxOlBzUwTLv9jU/3eMMe0jI4cbIUMy6fTpeOrvmE3vzGVA+tBU7XcZThDeXMV3vufNx+MtBoDcYMxmUK5CBjQ8bBaFfvfTWCuHaE9QL1cK8pTqIrcU16V8cgtG2TyUV+wo5CSF6nTkdjBmgsJdBVIQzI5KZDE38qGewKBgQCOLdXlLOk/vLvFQI50K4kX6/jKxhswu8sU59llaH1Jf26I2FALvKe+ucrGR0Zzir8zXFgjwIxLZKUpjeRICqAbxaLhBc3bywkei7LVE87EWYTQKH71Pokr4iHtPygL3xUmoJVJUUexO/rcxsNlMc3RWgVZ5xzDxovHYfzxg0Rv1w=="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGOE92/sjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjQwMzA2MTMwMzAzWhcNMzQwMzA2MTMwNDQzWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2D0m3xvwhHuBJfuXlC+CIeaVZMfOScgtWQO6pvBcFnSbhQv+vRQlu2qtfWkPx/t9g8/PMzrYW3s8G0oS2k6JSV2dP9CMzpgo02qLDg8AFSo1UA0i2w4M7Kw+ie3ZckyMMzTPNmRqi+tX7VOSfOSnhccJo203d0LUk9rgEZwZEglHMEquF7ctI0roMo3QPDwjdVfYvcvVd8KJQquxDbLDjlNMawFHzxosFKxed2LXer+JN7r5NgvIKFjM3mAAGfdoPT1yxMSfQ27dYiWRhbCYvxiYVBGnZLD0Lbbn3a6MwjMSzseTP+KJwCLQW/k+s4l4V2ztASFrYd7aPWFXC6fu7AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFl/Va/o7SHj3NrWDjNOgQAWJL+v0QTcoo5l3L/RCSDUI9SgEpIxNgqKfp0RT6IyoSAbNfp7j+QuYmxpJ0k5WWYP5OJJR/QT6lGpl9Y/BqzLdSpyjX1J+h4RdIBG6HQ6VJdTonXEBRhu4yx0WJrrm+JdSx6Wkn56ghfBxTuv1NngVMpV4Kq0cGxPV/DU05cxwgtlFATPn8uB7ANXWVVDe8EPB8vruvkeMfbPUhuVJmlXT2fhuasvMtk3BUSPuqEVyRQowk4ZZZTqVclirNui0V49r5uRVA/Kc/uyk96E+mAwVJkr8v2cJjnsmWZcPPSnbZelucbqOsqnptFeDsVlP7A="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "7b32a1ab-3b1d-4b72-8517-3965fac3e030",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "eaa4abc0-c69f-43c2-9344-df1548025adf"
            ],
            "secret": [
              "XZsd4cl5Xb4dhWIISh4aqzgQmoh64liI4iAoIUxtOgSp_1WwVJNIRNdvsjLjW90xCUa0b0wr7rNSCm66a0AMsskMLGl21OkDF08xSFwoWUqbxyyL9Fvskxcmp07Ift3HaCjJS1eFQ4qgAvGZiUyy2mzkXhtqiEiDA_m--U-89p4"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "a0198fe0-7873-4c9e-9a90-f03eebad5279",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAod5PzFS1esdoWSWeIce7WXtS5GOK1R1W2mVvUv8dfinMmmMkAw8Zze/lcUoHk+Pkmv6JKc12/bzSjxf+BKXKLNf4d60gPPsjkgn3i1ROcaBoVEsglokxflTnq+x8MlF/YdUUY4dbNd4o5gzFxrWkDuAViekpUUcCxs4rfiuLQqPNArV7ReHl9XEMasi+tV6XVa58t/PWSEHIS5qlsvh4lpTKuP0srN//jyN5lPZ3oQ03ahbMxX29l4tuBvtQWVN0CY3KUH7v4+nci0gyDwJ64/gM+e3q1N2fSIaZ1ZYtTycByLoHtdCY9wDCvFOYxBJsSrBelSeOcAFq0d/9pjP+GwIDAQABAoIBAFBdurvl8ObBO6dLPIxkCLpANyMq4wK1muo7A38vJ9r8cNfUUkxsgnDTY1UQntuIAfgMWViWaTZIujgOfvGayNrj7bqpi8CLJhl7dlrIZFwY+sOjO05SVm71Q8MB2pX3Daoqq4FQ8nG32BGEFOv4QjiafEcpKvjuK0w+j6yIfQ97zwnJeCgdppAQY9m3HXUy4haovKIWqyxcJhTSlTjIRK7fPt7ctgQZIVK+jwJ3BL/DgHgKExNSXwzYuoDrugB2qKifYnEnnpUdnaUdz8sgSMjibY/sz+171Cg7rRTSnioR52+a3617jSTIjPi2NHkSvGtOFt8v+prjnq1qbY3DLQ0CgYEAy+JNqfWXMxVjcRowxuBWnloPt6vZqK+sh071sDXw0pp4KFZ+pmH6BlHzdmAL1ZUNdIkUe9NV4ZFcDtdwz+0dyWkHHoOnT7uaW6qWVhIgs6kSoZOXsVv9NddfLdSshLFbkpva/kM4CsclXyMBVxV6mgHGrDeUEp/UhwIZkOku9CUCgYEAyz6a8xq1AiC4pijTvKZKfKqj7LSOm9QrcmVKQcYTo414Zm7JZsnLM2S1G1UgU+ROFtp9iqfVtf2OV8PwHMMkNhYCOjQWnqEZrdnds8bo2hdgTtdtPgl4JjiBL1EbCzAnt5/AZPDtm23uS/13dgTgGucILqvmNo9FEQbF0rh9dT8CgYBxiPj0rzVelgeFQS9uYBj8H2znPAR+Ii2yP68jTDZqIOjOlbP7VU4U3Of1wHB2pIUUow1MExic/wRDo4dH0mQm95ymSmwOQ4smhq0nCvs48OrWHUl406ACrodrDyZu0hELaE0gEDCSF+ngu66QXv6h6mFHH8AOSwDfmbTA9IlYHQKBgQCo8FoF1t48bYxueSM+/Q6PP5vQZmjfuGWAyhcGQyoR2ccJhe8c5IFmL8CmfoTHls8eCfEubsGia6eE5lZQ4hfYaUTismdW5dwdeSnihGUK20FvZ3vjhCV9x5wCA62yCA4LgNuATA+FEcRxH7fLvtO1KPLRMIvEMCSduX534GhQKwKBgQCszXjq6frnTybsjL0eRUaYyCSr8n8EX6brwI1VuLTxZScEStR1ZKCcd00tDl0w1zLEZxGL09ZlxkAA62oVfM+SElIxMJfl5Mx0UkG/oQH9gHqhaiXYJ2iWnkef1d9wIylmiEgpsibSS+wMMyTZhVF2uJG5w3PjI90r7SczuiyohA=="
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGOE93BoTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjQwMzA2MTMwMzAzWhcNMzQwMzA2MTMwNDQzWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCh3k/MVLV6x2hZJZ4hx7tZe1LkY4rVHVbaZW9S/x1+KcyaYyQDDxnN7+VxSgeT4+Sa/okpzXb9vNKPF/4Epcos1/h3rSA8+yOSCfeLVE5xoGhUSyCWiTF+VOer7HwyUX9h1RRjh1s13ijmDMXGtaQO4BWJ6SlRRwLGzit+K4tCo80CtXtF4eX1cQxqyL61XpdVrny389ZIQchLmqWy+HiWlMq4/Sys3/+PI3mU9nehDTdqFszFfb2Xi24G+1BZU3QJjcpQfu/j6dyLSDIPAnrj+Az57erU3Z9IhpnVli1PJwHIuge10Jj3AMK8U5jEEmxKsF6VJ45wAWrR3/2mM/4bAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIcIAX6lEh/Uh5nh3qlPFYO+n9fPzjqNyzQKAYSoIDzKXT4ZnMcpZHNaNzyiYA79BUkJNIy3Mbg0dJXemH2gS2FxXDjhMV/ytmVJbAryabLpUYtBUCPKQ5sMUw/qvMDxY04Z27KlBnfi6s0vDlTSVFr0Z0yQ5UcN0r0gEPA7A4VQOz1wXc1UsOGTSvqx5NWuEGAWIvr108sSgGLXt5vex1Bv8kBnxCr7Mvq7O4zSaWDFhjE+M2BsAsxWIC/zezr0C4Lnhz+17RoEGhnqdAzz5z5hLwY535kAW1M1fgVGyYnml55l5ryYbxi0OPsXKi5MM5xiaqak1tErOtMeW166YHw="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "84bab4c4-20b3-4129-b0f9-a8fa08b43464",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "b8f7a7f3-1cb1-48b6-8750-f601aaed1e6a"
            ],
            "secret": [
              "BS-Ye-63WzewsZGbzn3TeQ"
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "0ac86a56-2c06-45e4-8e66-e80ae244ab67",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9086c2f7-6e55-45b4-992e-201ffd5b8cab",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e078f477-284b-487b-a1d2-2b131da62862",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bcbce815-296d-4cad-a24c-8043660e573b",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "6aad5dfc-4bb5-4fdb-ab90-38d8976a1a12",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "6e6dca4e-99f5-41d7-a7a1-c6617f78d5e2",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "3b7bae9d-f230-4dd8-b1c3-5e26787aaf03",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b015f322-8df6-4af8-b66d-2392146dd433",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a4c7de36-800c-46c9-85b2-8b614b354a5e",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "792d29aa-a23a-4deb-bdf8-822c540d96bd",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5166e6a4-d7f5-4757-ba68-4f2f94808fa2",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9c25b85c-f100-4c25-8a2f-293fdaf0326c",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "857d19dd-8409-457c-8885-73d0456a3f36",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "daf29365-750e-4c0b-a632-6a9cc2c0042f",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "6d07f894-3862-4e30-b8f5-855b7575ae54",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "db31ad79-c61d-4d71-8284-09ea46743e8c",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c570cfa8-e7db-4aa4-abeb-e48571787a83",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "72ac1bf3-4fb5-487b-84c7-bfbefbe7f758",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "64cccc89-4762-438e-859d-4b99a32078f9",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "f4d99213-6b82-4add-8a38-9451b01b99a8",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "24.0.0",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "a93a5667-9e7d-4c4d-8b67-a48d51fa0582",
    "realm": "external-roles-spi-test",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "d996551a-c344-4ca2-95e8-1720e0cbedf2",
          "name": "KC_ROLE1",
          "description": "Keycloak sample realm role",
          "composite": false,
          "clientRole": false,
          "containerId": "a93a5667-9e7d-4c4d-8b67-a48d51fa0582",
          "attributes": {}
        },
        {
          "id": "4c0ca5f7-ab5d-4248-b634-2b1f8e28a02d",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "a93a5667-9e7d-4c4d-8b67-a48d51fa0582",
          "attributes": {}
        },
        {
          "id": "5587b870-81c7-468f-9af4-d80d89ef58ad",
          "name": "default-roles-external-roles-spi-test",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "a93a5667-9e7d-4c4d-8b67-a48d51fa0582",
          "attributes": {}
        },
        {
          "id": "5d4aa682-ebde-48ec-a2c3-16f6232dcb1a",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "a93a5667-9e7d-4c4d-8b67-a48d51fa0582",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "9d58cdcf-f808-476b-a11e-fdc89f856d07",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "733cb412-ee8a-4018-9d4b-01e03a522e6d",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "0bf33a34-7b8f-4d44-9173-3b34de851acc",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "4bae3f59-ebd3-4dd1-b1ec-7393cfe032cd",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "021eec45-8a0e-4d5b-82d8-2f1f616b1a63",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "e056d7ee-33a1-4b6e-b046-31d150f608a7",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "7dea38ee-9793-4e64-abf0-eaef4d4f880a",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "9f7e6afe-aecf-4129-9bbf-24e59c445f5d",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients",
                  "view-clients",
                  "view-events",
                  "manage-identity-providers",
                  "query-groups",
                  "manage-realm",
                  "query-users",
                  "view-authorization",
                  "manage-authorization",
                  "impersonation",
                  "manage-users",
                  "manage-events",
                  "query-realms",
                  "view-identity-providers",
                  "create-client",
                  "view-realm",
                  "view-users",
                  "manage-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "ab058ddc-d64a-4bf4-b26d-f7504ccd8df2",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "9c2a5a91-35da-4f06-890c-845faa3b0e05",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "ed4ba674-a7d2-4fb4-91d5-f8ff069cd48f",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "d9e20ee9-cc0c-4358-8f31-a9da6e2d2942",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "0fdb3015-ccb2-4b38-8b69-244d5a252aca",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "c72c815b-6547-47b1-8abd-2e6add334c0c",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "caffb225-5dc0-4d85-b9e6-14d0184f8263",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "1971a586-40e4-47a1-b930-86f9ad2ae09b",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "3e754d31-4930-441e-ae86-f6b096ca3e3e",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "7d309acb-f567-4643-9160-91769b214441",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          },
          {
            "id": "4994a9c2-0b48-46a8-a0f6-e0a2fa6b1ede",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "2919d9ff-7990-4123-8a77-d2627ee608f4",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "cb337f24-3345-4270-a38b-9064ce2fc925",
            "attributes": {}
          }
        ],
        "myapp": [],
        "account": [
          {
            "id": "23df166a-d0a7-456d-bbb8-7f5b215ccf01",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "8ad0cc6d-4266-4561-b607-0a1d2fef7b28",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "51271306-fa61-46cd-b8db-19db5b2124da",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "8503356c-c4c7-41e3-8df3-1cbb722b8ae9",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "7698752e-6fd6-4eff-998c-5e851845656b",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "a3b5780c-5630-4d8c-9a4b-7cad03205eab",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "37066853-b1cc-49af-9e79-fdd4440166f7",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          },
          {
            "id": "d522f773-2385-49bf-803d-17bd90308dd0",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "5587b870-81c7-468f-9af4-d80d89ef58ad",
      "name": "default-roles-external-roles-spi-test",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "a93a5667-9e7d-4c4d-8b67-a48d51fa0582"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "510071d2-cded-4665-b3c9-5c40c74f4f2a",
        "username": "service-account-myapp",
        "emailVerified": false,
        "createdTimestamp": 1709730593299,
        "enabled": true,
        "totp": false,
        "serviceAccountClientId": "myapp",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "KC_ROLE1",
          "default-roles-external-roles-spi-test"
        ],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "6eb062cc-f920-41f4-86a4-9f3dcc49a7a0",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/external-roles-spi-test/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/external-roles-spi-test/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "9450f0b3-b774-4769-9252-140bba7d7eab",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/external-roles-spi-test/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/external-roles-spi-test/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "8a3cbfdb-8446-4fab-bb37-971615eca69b",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "14b15ecd-21a5-410e-9c82-bb2849d368f8",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "cb337f24-3345-4270-a38b-9064ce2fc925",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "cebd05c8-6fd1-4bfd-96e6-ccb1f33ff3ca",
        "clientId": "myapp",
        "name": "Test Client",
        "description": "Test Client",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "7g8sAGV9RmCkLI67l8xQMEF6WSuAm8Qr",
        "redirectUris": [
          "/*"
        ],
        "webOrigins": [
          "/*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "client.secret.creation.time": "1709730593",
          "backchannel.logout.session.required": "true",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "e0d088d2-6607-4840-89fe-e9b36145e03d",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "introspection.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c4bd8216-0948-4712-b7f3-30a4c098de89",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "introspection.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "006dae19-2bd7-4c7e-82b9-f00a4342fc18",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "introspection.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d2fede36-b7f9-4d0f-b97d-906919a09d2a",
            "name": "MyApp external roles token mapper",
            "protocol": "openid-connect",
            "protocolMapper": "external-roles-protocol-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "lightweight.claim": "false",
              "external.roles.api.url": "http://external-api:8080/api/users/{USER_ID}/roles",
              "access.token.claim": "true",
              "claim.name": "externalRoles"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "7c5f91e7-268d-4a80-9b99-c592ec318d39",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a7a56041-b6dc-4cc1-b5d6-5c9127fbb645",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/external-roles-spi-test/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/external-roles-spi-test/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "0284e5fc-bdeb-47aa-b232-306cc5a16ee3",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "af229e72-be3a-41ff-afc1-aab872508630",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "7642b886-6a4c-4d2a-b776-309b7daddd53",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2ee80cb4-d8ce-485c-bffa-f997d3e1bdc0",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1b8a25f9-b256-4027-a372-c210a9408d23",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "72a3f7f7-8fdd-436c-8817-2fda52ff5a7d",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "4ee91886-96ca-44d9-80bc-c672fed27d01",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f8c9eeaa-eff0-4ec1-bb87-13f28ee224cd",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "037517c4-4fe4-4980-bab6-bc8aa4ef6602",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "35c2c6f9-689c-4d49-a540-3c17fe695047",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "29364e4c-6648-495d-a152-439b8a2dfebb",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "9f380cde-0cae-4c8b-8beb-7490884db004",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "2b167dcf-b184-4866-accf-ca39442fd2ff",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "3e131eb7-78c5-4c0e-8041-9dcf7d2ccc85",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "86e78ba9-bb4e-4ea7-86fd-9a05724812d2",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e02f71f9-2d15-40c6-95a9-eb78c87884a5",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "53f2e4a5-f13a-4b19-9c8e-a6c395c57838",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5a4d6b80-7231-45e7-932c-9bcf990ff94b",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "81eb1c03-3769-43ab-8f4f-d96ac397a6ad",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5c59e5ee-504c-4d18-8c43-0c959702f829",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "45e30891-c807-4d21-8172-a24af0e013b3",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "87958f25-b449-4f9d-994d-52eff97f2b23",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c7547530-f631-4d18-9d21-31c6833b178f",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0d25c721-76b5-4a16-82af-e30c6fa98d1d",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ca72978-7733-407a-8103-13fd82bcccfa",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "715fd729-f59a-49de-a38d-fc8a459c48ac",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ec059c38-e615-452c-adc3-d553a27994d6",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e28e15e6-c28d-4ff1-905f-facd4c5f88f1",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b75b5838-8e38-4d42-8b65-c1cff8bcc149",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "04ab7190-49e0-468c-bc1c-effc771e4bdd",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "28436a35-b554-441b-95a6-12eda7e42052",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "95e459ad-401e-4eea-a865-e3f0b7d7a0dc",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "fdc3d8e5-57dd-4f4c-b5ee-82fd24d8906b",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "23518a4b-a8b4-4f2e-bc46-a6c9a934b80a",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "3c8026bc-8b68-4891-9f6b-41fded9e6647",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "71eaead6-8169-47c3-a9c0-98c7c44eef40",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "7ab036d7-b4dd-4b7c-9814-64650c1ef2f7",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "b4d1384f-e7d5-465e-aec7-174715f599c6",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "53288307-38ef-4b67-b339-e4822542e05c",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "f201d9b8-3f15-49fc-ac0c-5a51c4700be4",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "499cd28b-11f7-4679-b656-cb5a86fcb86a",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "oidc-full-name-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "b7531fc8-d6a5-48c6-b130-27c288af8733",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "92ecd058-4aac-4dee-9a68-cae8521a89ba",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-property-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        },
        {
          "id": "ede37a8b-d14f-4755-a63e-2264f8cace73",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "145e2ba4-06b8-4fcb-836a-92dbf4a0491a",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "e1ac874b-cee6-41b0-91b5-a0955ec89fa7",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "0b04f05f-c30c-4e74-a492-9181d036c50f",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAxsDbj/D0qGhPhbEYUcd57nizm2VWBwXRlIhgxF8GbZ37icgq0y7L8p1h1ymAlzyQkyswbenaF8Zjv0LxSlPAU2qEMgLPO9ZOnYRe+sJwsV0IvBX0Rr+lFO1lcT2W/xTaUKTSMS9Zf3yg3zP18eASuYI3eQKBlhBSc8Pn+12p9HQqA3OjFME3B+koL16Ywv2WWhf2MMBlRJ4IL2m9Mn9iLTCyGqfWz8oC7QWCdKmxh65iK3CzjmevRWV3kuSunrntkEPuOJ4I863c4VJcgGNmGkR0qpArzbQ1OnC5Zb8ZaytGch/1sRx6zV0q8ydqwH9RATNeyw7BanxJe5ieTk6SZwIDAQABAoIBAAw1RWdChCyh95x9I8LGL2mj9VhKsa2NwHFQrSzyr0jlZtFwP50oJzPYUe2u6Wygtjqr8PYXYqOKNo9Fc9++ZDZbeRI/VO5WfA611kWt0tE6JzKyYIZF+ERgTpZVk6RIah6A+T43K9amV5VOMkGwo0XMx06CBmaqyv28X0/z0WAn9JUKPGxTcv5oNUmHe0ACf2YHZ3N7SJ4XUsZgTUd17Z4WPTeoXsn4lihkwqUX67a0UI5OSKzY+Cz9UnMXHdg7Nrp8qaq/70BWm0CHWKYNrB3k05G0DES9YikpeQfXsQxMzj0gGqb89JF0C0ao575iB2qQtBs7mOKbckJUZLPh4XkCgYEA/UrExSxgAzL41zJC2ro/5sDvuBWfyeWizkv5C4WJ2rQdOwyyU6P8Ut58i2fqNLMsmK80t9IbcHJa4GVnYEvdKHuUb4KDVY4YtlzvYNtPoo60HaqBY5KktL7w8iQrdj8Pyj/LW6BYaRm6q8yi4pFIp12oUNyDzzPXC61uaJEKvlkCgYEAyODSpCDL1Itg9jlhAsfLji146eHYc9reC3Oi1BhrtvomfgZSdZJr1tnJ3GGUOUjiHcWyPRo3xDd1FWMAB1ye1M7FK8H9cnsumTONOvWptYSzAFGkY+RW9OvUmezKfqNC2QRs2HIndsJhreEoAguNKf+e2mybJ79B4iXiSEqZPr8CgYEAj7kUTBlw5X/PyTQA0WHrjoEdxOOoRoShy9M6HnqIjWu0RmRe76zWKSOLogK1129vt7d6/28eGMEapceEUBTcCfONd3SkFzDI/vle7yOiXUgCFe9A+gIkqVbLG2rAqpj/2bA3MOecIw7xaDh2mH79rdIsBq4JsNHmjP687mKWqQkCgYA5qsENuRSK2dBmHybIY47+K/OwQNOgvs5Lv1CZTsFtb/ao6yu08OngbflTOPgSUegH3/9BJ0unGryT/S2+70nxkcJsw2389Xv1IyWCLZAgug2hI87rlluYSDNqVN306O2B25Fbubm2kCr2fdK8c5B85BM4ZUFNccx6HaIOWswPhQKBgHBbDrj31YvFOPmNJWg0b7LIj6yfdVCCPrsaIVuD/skHcfmUZOVzOmlGXvYAsj3n8BWM9vt26Q8WuoY5Xua7gUMcU//4kPsZUcYhSQSvX2bB1MMIq0ZBb6dIfMIdXHL+yw6najj1Xrca4OL00GsmcocJry2Rq4XVTcCeMj60Kmc5"
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICvTCCAaUCBgGOE+Fb+DANBgkqhkiG9w0BAQsFADAiMSAwHgYDVQQDDBdleHRlcm5hbC1yb2xlcy1zcGktdGVzdDAeFw0yNDAzMDYxMzA3MDBaFw0zNDAzMDYxMzA4NDBaMCIxIDAeBgNVBAMMF2V4dGVybmFsLXJvbGVzLXNwaS10ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxsDbj/D0qGhPhbEYUcd57nizm2VWBwXRlIhgxF8GbZ37icgq0y7L8p1h1ymAlzyQkyswbenaF8Zjv0LxSlPAU2qEMgLPO9ZOnYRe+sJwsV0IvBX0Rr+lFO1lcT2W/xTaUKTSMS9Zf3yg3zP18eASuYI3eQKBlhBSc8Pn+12p9HQqA3OjFME3B+koL16Ywv2WWhf2MMBlRJ4IL2m9Mn9iLTCyGqfWz8oC7QWCdKmxh65iK3CzjmevRWV3kuSunrntkEPuOJ4I863c4VJcgGNmGkR0qpArzbQ1OnC5Zb8ZaytGch/1sRx6zV0q8ydqwH9RATNeyw7BanxJe5ieTk6SZwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB0eN5p/38y8GhaNt4+8L9g9YS9nbc3N6/Craw6xlhaHP/iWUsu23narzRea0O2jy5FnceM0ijgqUWgiCC3nMYNuqiRrpaQNl8BL3U504xC8j5qcnwl0jKGXcmf6KwL64LcQFGasjD/v3aFtf1XdgHvFwFP0fghGxH4d72P8jXDQwSlNShDIW2AxPQg+GLP9OIT/B8cb2OisiSj8kAmO2Fithw28wvlW/0U0sLVvv5wSQEdq+pD7aNG96TJocv7cX3fTXSiKyzU9DasMf1h1kzHLIXVqst1QDLZjGS7CimLrYmoGBx66zXQTD3Sle+L70DSAxQ+Jkg2mIzKrqg6jtLW"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "a1662226-fa6b-4eec-a6f8-557e7e900b36",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "266c1454-a5a5-4a79-be9d-b5e3e3968067"
            ],
            "secret": [
              "nhGXHEArMj-Umzd4Bp-DPtvpI37SlabhhVhHNCaTpnhU00s7Jrh7DPlzGT3_EfYWFeVzstNu-6XXb_ii_KIkfkTysSC896lt9iCZdKDsxTplE_ypibVtvng2SDhycV8s3MwMNJYlLhAPC3HP8NXYJYr7_vDQdaN8t0udkAU6mTw"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "3f7cf2c9-83b1-4357-8ee2-4af35d360022",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEogIBAAKCAQEAo3hViFfLvoS0c2xnZPKrw5Noe49H3AhAxpw0qCFO9JFW1lyjAxMYjbbhfUS9dLKfrLcbFT2eORXq6loCYtGk2swWtyqeGvcF3BtEATq4pe7WeZaCCwO1n9k1YmLzb7ULm2XJP3MjO6NC+WadCGjDZMqZqLUjNqQYundlDdgUlKmjaNQkFG9EypDrc3LmTJnmUf59lFS5gudTXCD441oJXZBZFac5GNAFoiiccxtYelAa/FngUOkB+fqM7aJUt0pNOSJeoARwpT/ow8qaIw0d7YAAEfM7THw56AXaFptxiSbMgxueuVIQ61i6qEYoaA+acpE+c+nGD1roOA7lEWer+wIDAQABAoIBAAU3aSipVJEcfv2n70IOFGPF/Rw5nZtsj/9GgM+qBcZRf6nmLuAsPdOtNajfsVlbUd5wbBF+Hoxyd0VJ4LBH7Ft8Y8Ut5k8J+Z/lJthl3U/o5+MyuwJK+K1vKwBGvr9JJw5Vwy7z0k4Bjw49CLR5/geQsjKWBSz7M5F6ZI56ihLsVyQcLu3wmukC/OJdPaAgwoowM0mfCaRi8Wp6dLI4c2aj2f3kTRJuDAEmp9cIs1qy5bVL26ZPNhAZ/WPSdC3mbqIufCA+Kx4vsYojy0gFZyQBYRTQdMQ9s9E0N+ZYb0axjnMx81te2tnkXNFcy2+vPO8s5gJdeETxVExzQhSBgRECgYEA2/X3Fto0nbG3F/Jj1odMv8HKV7yXmiw80rdYITY6qo0KojZrPsYtm4uFNmiMkGuJmD8PIgqMk/7rVP2/RPBZKRp8NmdgByN4W7umDOSlLf4SVw4DC5UrgJ8xn61XAMzsnozqm2thXJKT29OjIlzANPiozOhkZwamGjSYLNfLEdUCgYEAvkDr28I+I6z6ufV/BvPu5RSPh6EapvUn9MJXgqQWRtoUh7wbiyqsZhs1hDEsUPxNMYRiNjdSWK8TxOUNalEwupvcJJ+DHP+EgPl0G4G6tRZ0TPB9qXgtDfZ7y3BTgJeQyZM8NQEfWzj1A1epsv3YF+Y4b6006TmjRUSO+TZ63o8CgYB8YWr2pi8omOzDAtLH5bxVlrzXvhIwISHHuduA9ExaUuUXcxRT6/awRUXvzVDm/ZhR2h6xjiuOKJFkfxRgZFTWtF5W2T/o6XrOzJ6KHeT1y/0M8yRvsUtnMR37gCZ5kmefBGpJtn/YvB4WKWfPL4mUqqOxMxxLUewtV15RxTjUfQKBgHi60fEejjgtaN3gv781xH9yULKMtVEFeVmEievJHKnRcf3AjOn/Jm+VDJzaZ3js4j9t9rTY3lSQpUbo4154Lyf8B/Llllose3Us11UtOcH4gczhP5zvOggGRgCPQy3zAFoqKKaqE6/bsP9x/aosE5j26xFTJKRrgwRNwTy8KbRZAoGAfAPDJLWMtAOpaYkDOpFc3hWz7Qkgitp5Hmljmr5pVFX5UjqXifB+9FDMzprpq+kZSDfkZGN2Xan+tTfjhaFqwH/c3rPi+foPVi668CNIwuj4S3YyyoHrkESI2R5K28/3Gd6zQfWXmeBVfRa119wF4PRspn8OXNRW2+jg36aD4IE="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICvTCCAaUCBgGOE+FbaTANBgkqhkiG9w0BAQsFADAiMSAwHgYDVQQDDBdleHRlcm5hbC1yb2xlcy1zcGktdGVzdDAeFw0yNDAzMDYxMzA2NTlaFw0zNDAzMDYxMzA4MzlaMCIxIDAeBgNVBAMMF2V4dGVybmFsLXJvbGVzLXNwaS10ZXN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo3hViFfLvoS0c2xnZPKrw5Noe49H3AhAxpw0qCFO9JFW1lyjAxMYjbbhfUS9dLKfrLcbFT2eORXq6loCYtGk2swWtyqeGvcF3BtEATq4pe7WeZaCCwO1n9k1YmLzb7ULm2XJP3MjO6NC+WadCGjDZMqZqLUjNqQYundlDdgUlKmjaNQkFG9EypDrc3LmTJnmUf59lFS5gudTXCD441oJXZBZFac5GNAFoiiccxtYelAa/FngUOkB+fqM7aJUt0pNOSJeoARwpT/ow8qaIw0d7YAAEfM7THw56AXaFptxiSbMgxueuVIQ61i6qEYoaA+acpE+c+nGD1roOA7lEWer+wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQADlerHsWbYfz47A3gV8eOYOfLsAqzLSH08x+MvFdD8SeVjPb2CZtoTMw/FvYNIVvAAC8hOrpfhtPwJrGus/7lk/Qt/pMkarqv8amOQDU9kLVJKhz3fP5gs57JXWqspcY/OzllhSUNJYlQV2VxdlnyrZyckQbw4aDV4JwQeqhsGOHTjnJsO+xQLHi62KwJ4OJOd/d/nV0E1SLMI9gAPNFfDIO4jx6xB+12RrAzDaGNpYTvC/tmlvBtA4+Xw5QW3WH5E4zYsSk1xjWItD3gvaVWH3CGMtYOYNM5TaqQYyUFvVkhWk76HE90TMl3fETt+VjdjfI4T1TArFrPtQnfENXSk"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "2485ce55-a24d-42c4-91c7-7be1c9903089",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "a622af5f-3230-4de3-81b4-2be3f2ecec8f"
            ],
            "secret": [
              "pdSkEdbWDx9-qqOB0mJGdg"
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "bd7a8149-594f-4a50-9293-512e4e07c952",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "47226d15-83ba-4f19-a392-bfa4bed142dc",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "12b2daeb-975f-45f2-afbc-d6b43a09dfc7",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8b6446b1-1f52-41b7-923c-4315960b6475",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0833bdea-6af8-419c-a24e-e9a6126c898c",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "61ea5315-38aa-45f2-8137-53fa7d04eab7",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "882458cb-72bd-408d-8f8b-18dee79bb4fd",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f67e5038-b725-41bb-b097-5ba8102df854",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5e1c8ee7-bc9a-43c8-b4c4-51a40999f8e1",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "12ec3261-c058-4892-9f98-bed6de38da30",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2bec160e-ef7e-4b8f-ac9c-c463ec4a6af9",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "02d4cfe5-5902-4bdb-aeb5-3401823c5035",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c608bb74-2858-4f74-9a59-0150fb48f63d",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "601eae42-4145-4251-bd44-eced17c0968b",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b02cf9b7-7c59-4bb6-9719-464d38cf4f6d",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "801461c3-c403-4cf7-8982-396a1b5c3673",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f504896e-7f8d-4331-916a-85d355241acc",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f37b86ed-3d83-485c-920e-50f74bda5c6d",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "c4948f6b-794c-4916-ad1d-aee9498634c9",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "76d1da2e-9cfc-4ba8-95bc-c95981537a21",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "24.0.0",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]